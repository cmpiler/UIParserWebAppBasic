extends layout

block content
  script(src='https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js')
  h1(id='header1') CMPILERPROS UI Parser Demo
  p Let's start by dragging and dropping a JSON file between the title and this text
  head
    script(src='https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js')
    script.
      $(document).ready(function(){
      $(":file").css("background-color", "blue");
      });
    style.
      body {
      margin: 0;
      padding: 0;
      overflow: hidden;
      background-color: #F0F0F0;
      }
  body(min-height='100%', min-width='100%')
    script.
      var dropbox;
      function dragenter(e) {
        e.stopPropagation();
        e.preventDefault();
      }
      function dragover(e) {
        e.stopPropagation();
        e.preventDefault();
      }
      function drop(e) {
        e.stopPropagation();
        e.preventDefault();
        var dt = e.dataTransfer;
        var files = dt.files;
        processFile(files);
      }
      dropbox = document.querySelector("body");
      dropbox.addEventListener("dragenter", dragenter, false);
      dropbox.addEventListener("dragover", dragover, false);
      dropbox.addEventListener("drop", drop, false);

      //var page = document.querySelector("html");
      console.log("window dimensions are "+window.innerWidth+", "+window.innerHeight);
      console.log("body dimensions are "+ documentWidth()+", "+documentHeight());

      function documentHeight() {
          return Math.max(
              document.documentElement.clientHeight,
              document.body.scrollHeight,
              document.documentElement.scrollHeight,
              document.body.offsetHeight,
              document.documentElement.offsetHeight
          );
      }
      function documentWidth() {
          return Math.max(
              document.documentElement.clientWidth,
              document.body.scrollWidth,
              document.documentElement.scrollWidth,
              document.body.offsetWidth,
              document.documentElement.offsetWidth
          );
      }

      function processFile(files){
        var file = files[0];
        if(files.length === 0) {
          alert('No files currently selected for upload');
        } else {
          console.log('File uploaded: '+file);

          var r = new FileReader();
          r.readAsText(file);
          r.onloadend = function(){
              console.log("File contents: "+r.result);

              createUI(r.result);
          }
        }

      function createUI(jsonString){
        var json = JSON.parse(r.result);

        for (var key in json) {
          if(key.length > 1){
            for(var c = 0;c < key.length;c++){
              try{
                if (json.hasOwnProperty(key)) {
                  var locX = json[key][c]["locationx"];
                  var locY = json[key][c]["locationy"];
                  var w = json[key][c]["width"];
                  var h = json[key][c]["height"];
                  var text = json[key][c]["text"];
                  var uiType = json[key][c]["type"];
                  var layer = json[key][c]["layer"];

                  console.log(locX + ", " +locY + ", " + text);

                  addBr();addBr();

                  if (uiType === "lbl"){
                    addLbl(w, h, locX, locY, text);
                    alert(document.getElementById(createUIID("lbl", locX, locY)).style.left);
                  }else if (uiType === "btn"){
                    addBtn(w, h, locX, locY, text);
                  }else if(uiType === "txt"){
                    addTxt(w, h, locX, locY, text);
                  }

                }
              }catch(e){
                if (json.hasOwnProperty(key)) {
                  var locX = json[key]["locationx"];
                  var locY = json[key]["locationy"];
                  var w = json[key]["width"];
                  var h = json[key]["height"];
                  var text = json[key]["text"];
                  var uiType = json[key]["type"];
                  var layer = json[key]["layer"];

                  console.log(locX + ", " +locY + ", " + text);

                  addBr();addBr();

                  if (uiType === "lbl"){
                    addLbl(w, h, locX, locY, text);
                    alert(document.getElementById(createUIID("lbl", locX, locY)).style.left);
                  }else if (uiType === "btn"){
                    addBtn(w, h, locX, locY, text);
                  }else if(uiType === "txt"){
                    addTxt(w, h, locX, locY, text);
                  }

                }
              }
            }
          }
          
        }
      }

      var px = "px";
      var topPadding = 150;

      function addLbl(w, h, locX, locY, text){
        var lbl = document.createElement("LABEL"); 
        try{
          lbl.style.position="absolute";
          lbl.style.left = locX+px;
          lbl.style.top = (parseInt(locY)+topPadding).toString()+px;
          lbl.style.width = w+px;
          lbl.style.height = h+px;
        }catch(e){
          console.log(e)
        }
        lbl.id = createUIID("lbl", locX, locY);
        var t = document.createTextNode(text);  

        lbl.appendChild(t);
        document.body.appendChild(lbl);
        addBr();addBr();
      }
      function addBtn(w, h, locX, locY, text){
        var btn = document.createElement("BUTTON"); 
        try{
          btn.id = createUIID("btn", locX, locY);
          btn.style.position="absolute";
          btn.style.top = (parseInt(locY)+topPadding).toString()+px;
          btn.style.left = locX+px;
          btn.style.width = w+px;
          btn.style.height = h+px;
        }catch(e){
          console.log(e)
        }
        var t = document.createTextNode(text);  

        btn.appendChild(t);
        document.body.appendChild(btn);
        addBr();addBr();
      }
      function addTxt(w, h, locX, locY, text){
        var txt = document.createElement("INPUT"); 
        txt.id = createUIID("txt", locX, locY);
        try{
          txt.style.position="absolute";
          txt.style.left = locX+px;
          txt.style.top = (parseInt(locY)+topPadding).toString()+px;
          txt.style.width = w+px;
          txt.style.height = h+px;
        }catch(e){
          console.log(e)
        }
        var t = document.createTextNode(text);  
        
        txt.appendChild(t);
        document.body.appendChild(txt);
        addBr();addBr();
      }
      function addBr(){
        var br = document.createElement("BR");
        document.body.appendChild(br);
      }
      function createUIID(type, locX, locY){
        return type+locX+','+locY;
      }

      }
    
  script(src='https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js', integrity='sha384-b/U6ypiBEHpOf/4+1nzFpr53nxSS+GLCkfwBdFNTxtclqqenISfwAzpKaMNFNmj4', crossorigin='anonymous')
  script(src='https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/js/bootstrap.min.js', integrity='sha384-h0AbiXch4ZDo7tp9hKZ4TsHbi047NrKGLO3SEJAg45jXxnGIfYzk4Si90RDIqNm1', crossorigin='anonymous')

